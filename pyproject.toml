[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "steel-toes"
dynamic = ["version"]
description = "protection against stepping on teammates toes in a kedro project"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Waylon Walker", email = "waylon@waylonwalker.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "click",
    "colorama",
    "kedro",
]

[tool.hatch.envs.default]
dependencies = [
    "black",
    "coverage",
    "coverage-rich",
    "GitPython",
    "PyYAML",
    "interrogate",
    "mypy",
    "pandas",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-rich",
    "ruff",
    "setuptools",
    "wheel",
]

[project.scripts]
steel-toes = "steel_toes:cli"

[project.entry-points."kedro.global_commands"]
steel-toes = "steel_toes:cli"

[project.urls]
homepage = "https://github.com/WaylonWalker/steel-toes"
issues = "https://github.com/WaylonWalker/steel-toes/issues"
docs = "https://steel-toes.kedro.dev/"

[tool.hatch.version]
path = "steel_toes/__init__.py"

[tool.hatch.envs.default.scripts]
test = "coverage run -m pytest"
covreport = "coverage-rich report"
cov = ['test', 'covreport']
lint = "ruff steel_toes"
format = "black steel_toes"
format-check = "black --check steel_toes"
build-docs = "markata build"
lint-test = [
 "lint",
 "format-check",
]
test-lint = "lint-test"

[tool.ruff]
line-length = 120 # includes docstirngs
[tool.ruff.per-file-ignores]
"markata/plugins/redirects.py" = ["E501"] # long docstring

[tool.pytest.ini_options]
addopts = "-ra -q --rich"
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.coverage_rich]
fail-under=24
